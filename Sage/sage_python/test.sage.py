

# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_4 = Integer(4); _sage_const_2 = Integer(2); _sage_const_5 = Integer(5); _sage_const_0xfffffffffffffffffffffffffffffffeffffffffffffffff = Integer(0xfffffffffffffffffffffffffffffffeffffffffffffffff); _sage_const_0xfffffffffffffffffffffffffffffffefffffffffffffffc = Integer(0xfffffffffffffffffffffffffffffffefffffffffffffffc); _sage_const_0x64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1 = Integer(0x64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1); _sage_const_0x188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012 = Integer(0x188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012); _sage_const_0x07192b95ffc8da78631011ed6b24cdd573f977a11e794811 = Integer(0x07192b95ffc8da78631011ed6b24cdd573f977a11e794811)
from Crypto.Util.number import *
with open("D:\\CTF\\ctf\\ctf_task\\XYCTF\\crypto\\bad\\out.txt","r") as f:
    data=f.readlines()
ms=eval(data[_sage_const_0 ][_sage_const_3 :])
C1s=eval(data[_sage_const_1 ][_sage_const_4 :])
C2s=eval(data[_sage_const_2 ][_sage_const_4 :])
decs=eval(data[_sage_const_3 ][_sage_const_5 :])
print(len(ms))
K = GF(_sage_const_0xfffffffffffffffffffffffffffffffeffffffffffffffff );a = K(_sage_const_0xfffffffffffffffffffffffffffffffefffffffffffffffc );b = K(_sage_const_0x64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1 )
E = EllipticCurve(K, (a, b))
G = E(_sage_const_0x188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012 , _sage_const_0x07192b95ffc8da78631011ed6b24cdd573f977a11e794811 )
flag=''
for i in range(len(ms)):
    C1=E(C1s[i])
    C2=E(C2s[i])
    dec=E(decs[i])
    M=E(ms[i])
    D=dec+pow(_sage_const_2 ,i)*C1
    if D==M:
        flag=flag+'0'
    else:
        flag=flag+'1'
FLAG=int(flag[::-_sage_const_1 ],_sage_const_2 )
print(long_to_bytes(FLAG))

