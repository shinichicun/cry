from Crypto.Util.number import *
from gmpy2 import *
from sage.all import *


n = 21565082948694783840356731900909936098780908746069610895091771879089296384790733500905397161145546019509902585300122788426031888837501936027897707888276471368327854370644924059278178964774514655573260383302608901426310503907463898354549735521824812277645334807952855135847907750515403473727735286151969684762818280749271879896126078806627531588395891576162339497077204689850668315579176447061555681646943570333198204584964746406253097720797911118092834886244270111485502799862270837974337937756922624063014424122888207985563782832691751771990551751914802463502433579235375356710510408221709200240040117610462116913991
e = 3180391971390812918525962947952771462130923120770180394641214999155172201064379647736131907378426534871864014374363650734608500260475290961331373372983263432757979106361710023913189645691325354964905095621084771815690030337188472783799899302262589528572724850778873731775466717272855019453469683996706997811280770048466653303531686926014031595283538843731946494127480889513055358039328645073689816747172677588348598266078306641336808634151397458764431217920778905691182045108007661315365885456698546129459767286340999997436542283758056042358417722805964008781725912361388093955681866636337388456852757463555044388139
c = 1212308602293962524296897721788101930243187919538339269978187817947651507300636630731646224081430638107645905530806017909746168189652880817764111409361616224483355653730680897431288370463309693050020081973297914669039973618229957569683410449822649661858414892870836706050568917014089042902634032901005691217915745568089526868906081385745451542459278182464070089008463466053248011120506014139520490805033298594654885826807283094205667620306437066089658543031570970778680430927128662985624683216725273773671077649467377222792134367955063296458003723533369743849740163773289609283796088845066525406058047891132387483912
m = 114514


beta = 0.34
delta = 0.02
amplification = 2048
X = int(pow(n,delta) * (5/2))
Y = int(pow(n,(beta+delta)) * (5/2))
M = []
M.append([n*n*X*X*X,0,0,0])
M.append([e*n*X*X*X,-n*X*X*Y,0,0])
M.append([e*e*X*X*X,-2*e*X*X*Y,X*Y*Y,0])
M.append([e*e*e*X*X*X,-3*e*e*X*X*Y,3*e*X*Y*Y,-Y*Y*Y])
M = Matrix(M)
A = M.LLL()[0]
p = []
p.append(A[0]//(X**3))
p.append(A[1]//(X^2*Y))
p.append(A[2]//(X*Y^2))
p.append(A[3]//(Y^3))
R.<x,y> = ZZ[]
f = x**3*p[0] + x**2*y*p[1] + x*y**2*p[2] + y**3*p[3]
f.factor()

# (-1) * (127197399621291635343772684442329566469285123471522420256385315375285992284351473562146955221271794592274561473285418119987797638057448505597908633796888011622995784326510086796124008473879180240334862701506430967*x + 944060947779011*y) * (4329868859449768738962615690270712475890809943874329990843990078369253210867257811995035833475301044369220881640923593375306356147707341242340618944701538077227228868424860206216139963772435785445045099795717071469543788217991337710004639803338946008216923171249038714567743449599038695419205757104583624445408140055573156351928273563716708093319231516175970257396927437573261279879295481189865754665216813478366748794220535370699250833294232429317424514466080709987916459661514780107355756548883925746203469183930403232679073979016906581654430349*x^2 - 4933244459410030616879119858801842051321226232318696576135895579045985252602068452611294693263152145569225411994582062739675062966229194399791139998195241800103462394520245370800134902922565157744567207066404846955960418050972032131525580590376175703136437204850361678822560570842237211141476717708603666014806507740635086599923663611473*x*y + 21143091267480826296985749581723730174122750028747220670474571573985681746037162426295604608601349309080848066267078368766164187*y^2)


k = 127197399621291635343772684442329566469285123471522420256385315375285992284351473562146955221271794592274561473285418119987797638057448505597908633796888011622995784326510086796124008473879180240334862701506430967 + 1
dq = 944060947779011
q = (e * dq + k - 1) // k
p = n // q
assert n == p * q
phi = (p-1) * (q-1)
d = inverse(e,phi)
m = pow(c,d,n)
flag = long_to_bytes(Integer(m))
print(flag)
